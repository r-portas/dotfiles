"===================================================
"
" Vim configuration "
" Author: Roy Portas - www.royportas.com " Version: 2.0
"===================================================

"===================================================
" Variables
"===================================================


"===================================================
" Vim Plug
"===================================================

let vimplug_exists=expand('~/.vim/autoload/plug.vim')

if !filereadable(vimplug_exists)
	echo "Installing Vim-Plug..."
	echo ""
	silent !\curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	let g:not_finish_vimplug = "yes"

	autocmd VimEnter * PlugInstall
endif 
"===================================================
" Plugins
"===================================================

call plug#begin(expand('~/.vim/plugged'))
Plug 'mhinz/vim-signify'
Plug 'ctrlpvim/ctrlp.vim'                           " File searching
Plug 'ajh17/VimCompletesMe'                         " Autocompletion
Plug 'itchyny/lightline.vim'                        " Custom statusbar (Requires 256 bit colours)
Plug 'chriskempson/base16-vim'                      " Base 16 Colorschemes
Plug 'tpope/vim-commentary'                         " Commenting plugin
Plug 'wakatime/vim-wakatime'

" Coding style and quality
" Plug 'vim-syntastic/syntastic'                      " Syntastic
Plug 'w0rp/ale'
Plug 'editorconfig/editorconfig-vim'                " Allows project based vim configurations

" Language Plugins
Plug 'keith/swift.vim'                              " Swift language
Plug 'othree/html5.vim' 			                " HTML5 language
Plug 'posva/vim-vue'                                " Vue language support
Plug 'elzr/vim-json'                                " JSON language support
Plug 'pangloss/vim-javascript'                      " JavaScript langauge support
Plug 'mxw/vim-jsx'                                  " React support
Plug 'leafgarland/typescript-vim'                   " Typescript language support
Plug 'ianks/vim-tsx'

call plug#end()

"===================================================
" Ctrl P Settings
"===================================================

" Ctrl P ignore config
set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux
set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe  " Windows

" Ignore the following directories and files
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](\.git|\.hg|\.svn|vendor|node_modules)$',
  \ 'file': '\v\.(exe|so|dll)$'
  \ }

" Ignore files in the .gitignore
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']


"===================================================
" Lightline Settings
"===================================================

let g:lightline = {
    \ }

"===================================================
" Syntastic Settings
"===================================================

" Syntastic
let g:syntastic_check_on_wq = 0
let g:syntastic_check_on_open = 0
"
" Fix slow parsing of XML files
let g:syntastic_xml_xmllint_args = "--xinclude --postvalid --nonet"

" Syntastic checkers
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_vue_checkers = ['eslint']
let g:syntastic_swift_checkers = ['swiftlint']
let g:syntastic_typescript_checkers = ['tslint']
let g:syntastic_java_checkers = []

"===================================================
" Shortcuts
"===================================================

" Set paste toggle
set pastetoggle=<F11>

" Custom commands
ca tn tabnew

" Keyboard shortcuts
:inoremap jj <esc>

" Better block indenting
vnoremap > >gv
vnoremap < <gv

"===================================================
" General Settings
"===================================================

" Clear highlighting on escape in normal mode
nnoremap <esc> :noh<return><esc>
nnoremap <esc>^[ <esc>^[

" Enable spellcheck and line wrap for markdown files
au BufRead *.md setlocal spell
au BufRead *.md setlocal tw=79

" Autmatically resize panes when Vim is resized
autocmd VimResized * wincmd =

" Allow system clipboard
set clipboard=unnamed

" Enable syntax highlighting
syntax enable

" Enable caching
set hidden

" Line numbering
set number
set numberwidth=5

" 1 tab == 4 spaces
set expandtab
set softtabstop=4
set tabstop=4
set shiftwidth=4

" Autoindent stuff
set autoindent
set wrap

" Command line completion
set wildmenu

" Always show the current position
set ruler

" Always show status line
set laststatus=2

" Search configuration
set incsearch
set hlsearch
set ignorecase

" Highlight matching brackets
set showmatch

" Disable backups
set nobackup
set nowritebackup
set noswapfile

" Automatically reload the file when it is changed
set autoread

" Fix backspace
set backspace=indent,eol,start

" Define how split works
set splitbelow
set splitright

" Set the line column
set colorcolumn=110

"===================================================
" Theme and color Settings
"===================================================

" Set the color scheme
colorscheme base16-solarized-light

" Nicer colors for solarized light
highlight Search ctermbg=LightYellow
highlight Visual ctermbg=LightYellow

" Setup gvim options
if has("gui_running")
    " set anti enc=utf-8
    set guifont=Ubuntu\ Mono:h14
end

" Hide the duplicated data caused by lightline
set noshowmode

" Filetype plugins
filetype plugin indent on

" Don't conceal the cursor when a JSON file is open
let g:vim_json_syntax_conceal = 0

" Syntax highlighting for JSDOC
let g:javascript_plugin_jsdoc = 1

" Apply jsx syntax to js files
let g:jsx_ext_required = 0

" Open typings file
function GetTypings(module_name)
    echom "node_modules/@types/" . a:module_name . "/index.d.ts"
    let file = globpath(getcwd(), "node_modules/@types/" . a:module_name . "/index.d.ts")
    execute "tabedit " . file
endfunction

command! -nargs=1 Typings call GetTypings(<f-args>)
